parameters:
  buildtype: ''
  DependsOn: []

jobs:
  - job: build_${{ parameters.buildtype }}
    dependsOn: ${{ parameters.DependsOn }}
    steps:
      - task: NodeTool@0
        inputs:
          versionSpec: '12.18'
        displayName: 'Install Node.js'

      - script: npm install
        displayName: 'npm install'

      - task: DownloadSecureFile@1
        inputs:
          secureFile: 'app_configs.zip'
        displayName: 'Download application configuration files'

      - task: ExtractFiles@1
        inputs:
          archiveFilePatterns: $(Agent.TempDirectory)/app_configs.zip
          cleanDestinationFolder: false
          destinationFolder: $(Agent.TempDirectory)
        displayName: 'Extracting'

      - task: CopyFiles@2
        inputs:
          SourceFolder: $(Agent.TempDirectory)/app_configs/ues-effluent-data-api-nest
          Contents: '*'
          TargetFolder: $(System.DefaultWorkingDirectory)/apps/ues-effluent-data-api-nest/src/environments
        displayName: 'Copying environment files to ues-effluent-data-api-nest'

      - task: CopyFiles@2
        inputs:
          SourceFolder: $(Agent.TempDirectory)/app_configs/ues-valves-nest
          Contents: '*'
          TargetFolder: $(System.DefaultWorkingDirectory)/apps/ues-valves-nest/src/environments
        displayName: 'Copying environment files to ues-valves-nest'

      - task: CopyFiles@2
        inputs:
          SourceFolder: $(Agent.TempDirectory)/app_configs/ues-recycling-data-api-nest
          Contents: '*'
          TargetFolder: $(System.DefaultWorkingDirectory)/apps/ues-recycling-data-api-nest/src/environments
        displayName: 'Copying environment files to ues-recycling-data-api-nest'

      - task: CopyFiles@2
        inputs:
          SourceFolder: $(Agent.TempDirectory)/app_configs/ues-operations-nest
          Contents: '*'
          TargetFolder: $(System.DefaultWorkingDirectory)/apps/ues-operations-nest/src/environments
        displayName: 'Copying environment files to ues-operations-nest'

      - task: CopyFiles@2
        inputs:
          SourceFolder: $(Agent.TempDirectory)/app_configs/cpa-nest
          Contents: '*'
          TargetFolder: $(System.DefaultWorkingDirectory)/apps/cpa-nest/src/environments
        displayName: 'Copying environment files to cpa-nest'

      - task: CopyFiles@2
        inputs:
          SourceFolder: $(Agent.TempDirectory)/app_configs/oidc-admin-nest
          Contents: '*'
          TargetFolder: $(System.DefaultWorkingDirectory)/apps/oidc-admin-nest/src/environments
        displayName: 'Copying environment files to oidc-admin-nest'

      - task: CopyFiles@2
        inputs:
          SourceFolder: $(Agent.TempDirectory)/app_configs/oidc-provider-nest
          Contents: 'ormconfig.ts'
          TargetFolder: $(System.DefaultWorkingDirectory)/apps/oidc-provider-nest/src/environments
        displayName: 'Copying environment files to oidc-provider-nest'

      - task: CopyFiles@2
        inputs:
          SourceFolder: $(Agent.TempDirectory)/app_configs/oidc-provider-nest
          Contents: 'oidc-provider-config.ts'
          TargetFolder: $(System.DefaultWorkingDirectory)/libs/oidc/provider-nestjs/src/lib/configs
        displayName: 'Copying oidc-provider-config file to oidc-provider-nest lib'

      - task: CopyFiles@2
        inputs:
          SourceFolder: $(Agent.TempDirectory)/app_configs/veoride-data-api-nest
          Contents: '*'
          TargetFolder: $(System.DefaultWorkingDirectory)/apps/veoride-data-api-nest/src/environments
          displayName: 'Copying environment files to veoride-data-api-nest'

      - task: CopyFiles@2
        inputs:
          SourceFolder: $(Agent.TempDirectory)/app_configs/veoride-data-compiler-node
          Contents: '*'
          TargetFolder: $(System.DefaultWorkingDirectory)/apps/veoride-data-compiler-node/src/environments
        displayName: 'Copying environment files to veoride-data-compiler-node'

      - bash: |
          npm run nx affected:build -- --base=$(affectedBase) --head=HEAD --configuration=${{ parameters.buildtype }} --exclude="signage-angular,trees-angular,bikeshare,gisday-competitions-angular,two-dashboard-angular,two-data-api-nest,two-angular,geoservices-angular,covid-data-api-nest,oidc-client-test,two-valup-nest,two-directory-nest,gisday-angular,gisday-nest,common-ngx-ui-notification,common-ngx-local-store,common-ngx-settings,common-ngx-pipes,veoride-scraper-node"
        displayName: 'Running build'

      - task: CopyFiles@2
        inputs:
          Contents: 'dist/**'
          TargetFolder: '$(Build.ArtifactStagingDirectory)'
        displayName: 'Copy Distribution Files'

      - task: PublishBuildArtifacts@1
        inputs:
          pathtoPublish: $(Build.ArtifactStagingDirectory) # dist or build files
          ArtifactName: 'js-monorepo-${{ parameters.buildtype }}'
        displayName: 'Publish Artifacts'
