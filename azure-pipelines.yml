variables:
  EXCLUDED_PROJECTS: 'signage-angular,trees-angular,two-dashboard-angular,two-data-api-nest,two-angular,covid-data-api-nest,two-valup-nest,two-directory-nest'
  IS_DEVELOPMENT: $[eq(variables['Build.SourceBranchName'], 'development')]
  IS_MASTER: $[eq(variables['Build.SourceBranchName'], 'master')]
  ${{ if and(ne(variables['Build.SourceBranchName'], 'master'), ne(variables['Build.SourceBranchName'], 'development')) }}:
    AFFECTED_BASE: origin/development # Default affected base base
  ${{ if eq(variables['Build.SourceBranchName'], 'development') }}:
    AFFECTED_BASE: origin/development~ # Affected base if build branch name is development
  ${{ if eq(variables['Build.SourceBranchName'], 'master') }}:
    AFFECTED_BASE: origin/master~ # Affected base if build branch name is master
  ${{ if eq(variables['Build.Reason'], 'PullRequest') }}:
    NX_BRANCH: $(System.PullRequest.PullRequestId) # You can use $(System.PullRequest.PullRequestNumber if your pipeline is triggered by a PR from GitHub ONLY)
    TARGET_BRANCH: $[replace(variables['System.PullRequest.TargetBranch'],'refs/heads/','origin/')]
  ${{ if ne(variables['Build.Reason'], 'PullRequest') }}:
    NX_BRANCH: $(Build.SourceBranchName)
  HEAD_SHA: $(git rev-parse HEAD)

pool:
  vmImage: 'ubuntu-latest'

stages:
  - stage: Setup
    displayName: 'Setup'
    jobs:
      - template: templates/jobs/deltaConfigure.yml

  - stage: Dependencies
    jobs:
      - template: templates/jobs/cacheOrRestoreDependencies.yml

  - stage: Lint
    dependsOn:
      - Setup
      - Dependencies
    variables:
      baseSha: $[stageDependencies.Setup.Last_SHA.outputs['last_successful_sha.BASE_SHA']]
    jobs:
      - template: templates/jobs/lintProjects.yml

  - stage: Build
    dependsOn:
      - Setup
      - Dependencies
    variables:
      baseSha: $[stageDependencies.Setup.Last_SHA.outputs['last_successful_sha.BASE_SHA']]
    jobs:
      - template: templates/jobs/build.yml
        parameters:
          buildType: development
      - template: templates/jobs/build.yml
        parameters:
          buildType: staging
      - template: templates/jobs/build.yml
        parameters:
          buildType: production

  - stage: Tag
    dependsOn: Build
    variables:
      baseSha: $[stageDependencies.Setup.Last_SHA.outputs['last_successful_sha.BASE_SHA']]
    jobs:
      - template: templates/jobs/buildTags.yml
