variables:
  - name: isDevelopment
    value: $[eq(variables['Build.SourceBranchName'], 'development')]
  - name: isMaster
    value: $[eq(variables['Build.SourceBranchName'], 'master')]
  - name: affectedBase
    ${{ if and(ne(variables['Build.SourceBranchName'], 'master'), ne(variables['Build.SourceBranchName'], 'development')) }}:
      value: origin/development # Default affected base base
    ${{ if eq(variables['Build.SourceBranchName'], 'development') }}:
      value: origin/development~ # Affected base if build branch name is development
    ${{ if eq(variables['Build.SourceBranchName'], 'master') }}:
      value: origin/maser~ # Affected base if build branch name is master

pool:
  vmImage: 'ubuntu-latest'

stages:
  - stage: Dependencies
    jobs:
      - job: Cache
        steps:
          - task: Cache@2
            inputs:
              key: 'npm | "$(Agent.OS)" | $(System.DefaultWorkingDirectory)/package-lock.json'
              path: '$(System.DefaultWorkingDirectory)/node_modules'
              cacheHitVar: 'CacheHit'
          - script: npm ci
            displayName: 'npm dep clean install'
            condition: ne(variables.CacheHit, 'true')

  - stage: Build
    dependsOn: Dependencies
    jobs:
      - template: jobs/buildTags.yml

      # - template: jobs/build.yml
      #   parameters:
      #     buildtype: development

      # - template: jobs/build.yml
      #   parameters:
      #     buildtype: staging

      # - template: jobs/build.yml
      #   parameters:
      #     buildtype: production
