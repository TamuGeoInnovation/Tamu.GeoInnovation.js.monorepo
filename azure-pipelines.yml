pool:
  vmImage: 'ubuntu-latest'

jobs:
  - job: CdForOIDCProviderNest
    steps:
      - task: NodeTool@0
        inputs:
          versionSpec: '12.18'
        displayName: 'Install Node.js'

      - script: npm install
        displayName: 'npm install'

      - task: DownloadSecureFile@1
        name: oidcenv
        displayName: 'Download oidcenv'
        inputs:
          secureFile: 'uesConfigs.zip'
      - task: ExtractFiles@1
        inputs:
          archiveFilePatterns: $(Agent.TempDirectory)/uesConfigs.zip
          cleanDestinationFolder: false
          destinationFolder: $(Agent.TempDirectory)/uesConfigs

      - task: CopyFiles@2
        displayName: 'Copying environment files to ues-effluent-data-api-nest'
        inputs:
          SourceFolder: $(Agent.TempDirectory)/uesConfigs/ues-effluent-data-api-nest
          Contents: '*'
          TargetFolder: $(System.DefaultWorkingDirectory)/apps/ues-effluent-data-api-nest/src/environments

      - task: CopyFiles@2
        displayName: 'Copying environment files to ues-valves-nest'
        inputs:
          SourceFolder: $(Agent.TempDirectory)/uesConfigs/ues-valves-nest
          Contents: '*'
          TargetFolder: $(System.DefaultWorkingDirectory)/apps/ues-valves-nest/src/environments

      - task: CopyFiles@2
        displayName: 'Copying environment files to ues-recycling-data-api-nest'
        inputs:
          SourceFolder: $(Agent.TempDirectory)/uesConfigs/ues-recycling-data-api-nest
          Contents: '*'
          TargetFolder: $(System.DefaultWorkingDirectory)/apps/ues-recycling-data-api-nest/src/environments

      - bash: |
          npm run nx affected:build -- --base=origin/development --head=HEAD --prod  --exclude="aggiemap-angular,signage-angular,trees-angular,bikeshare,cpa-angular,gisday-competitions-angular,oidc-admin-angular,two-dashboard-angular,two-data-api-nest,two-angular,geoservices-angular,covid-data-api-nest,oidc-provider-express,oidc-provider-nest,oidc-admin-nest,cpa-nest,oidc-client-test,oidc-provider-angular,two-valup-nest,two-directory-nest,gisday-angular,gisday-nest,common-ngx-ui-notification,common-ngx-local-store,common-ngx-settings,common-ngx-pipes"
        displayName: 'Running build'

      - bash: |
          npm run nx affected:apps --  --base=origin/development --head=HEAD --exclude="aggiemap-angular,signage-angular,trees-angular,bikeshare,cpa-angular,gisday-competitions-angular,oidc-admin-angular,two-dashboard-angular,two-data-api-nest,two-angular,geoservices-angular,covid-data-api-nest,oidc-provider-express,oidc-provider-nest,oidc-admin-nest,cpa-nest,oidc-client-test,oidc-provider-angular,two-valup-nest,two-directory-nest,gisday-angular,gisday-nest,common-ngx-ui-notification,common-ngx-local-store,common-ngx-settings,common-ngx-pipes" | grep -E '( - )(\w|-|\d|_)+' | sed -E 's/ - /##vso[build.addbuildtag]/g'
        displayName: 'add affected apps as buildtags'
      - task: CopyFiles@2
        inputs:
          Contents: 'dist/**' # Pull the build directory (React)
          TargetFolder: '$(Build.ArtifactStagingDirectory)'
        displayName: 'Copy Distribution Files'
      - task: PublishBuildArtifacts@1
        inputs:
          pathtoPublish: $(Build.ArtifactStagingDirectory) # dist or build files
          ArtifactName: 'js-monorepo' # output artifact named www
        displayName: 'Publish Artifacts'
